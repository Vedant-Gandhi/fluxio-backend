version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fluxio-postgres
    environment:
      POSTGRES_USER: ${FLUXIO_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${FLUXIO_DB_PASSWORD:-postgres}
      POSTGRES_DB: ${FLUXIO_DB_NAME:-fluxio}
    ports:
      - "${FLUXIO_DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    
  # MinIO S3-compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: fluxio-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    
  # MinIO Client (mc) for bucket setup
  minio-setup:
    image: minio/mc
    container_name: fluxio-minio-setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin};
      /usr/bin/mc mb --ignore-existing myminio/videos;
      /usr/bin/mc mb --ignore-existing myminio/thumbnails;
      /usr/bin/mc admin config set myminio notify_webhook:1 endpoint=http://host.docker.internal:8080/api/minio/events;
      /usr/bin/mc event add myminio/videos arn:minio:sqs::1:webhook --event put;
      exit 0;
      "

volumes:
  postgres_data:
    name: fluxio-postgres-data
  minio_data:
    name: fluxio-minio-data